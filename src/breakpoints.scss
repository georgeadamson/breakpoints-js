
// Up to you:
$desktopDeviceMaxWidth:      80em;
$tabletDeviceMaxWidth:       60em;
$phoneDeviceMaxWidth:        40em;
$featurephoneDeviceMaxWidth: 20em;

// 
// // Rudimentary detection of display type using breakpoints defined in the CSS. Store the results in global object variable.
// // The advantage of this technique is simply that the breakpoints don't have to be defined and duplicated in the JS too.
// // Eg: window.breakpoints.phone === true
// // IMPORTANT: Must be used with breakpoints.scss.
// //            Use with respond.js to use this Media Query technique in IE6-8 etc.
// // By George Adamson - https://github.com/georgeadamson/breakpoints-js
// 
// /* Define the names of all our breakpoints: */
// // (Not required but useful to produce a hash of possible breakpoints and their current state by iterating through this list)
// HEAD * { font-family: "defaultbreakpoint","small","medium","large","giant"; }
// 
// // Detect "current" display name using mediaqueries: (Javascript can read this to find out currently applicable display)
// 
// /* When media-queries not supported: */
// HEAD { font-family: 'defaultbreakpoint'; }
// 
// /* Otherwise when media-queries are supported: */ 
// @media (min-width: $largeDeviceMaxWidth ) { HEAD { font-family: "giant";  } }    // Eg: Large desktop
// @media (max-width: $largeDeviceMaxWidth ) { HEAD { font-family: "large";  } }    // Eg: Small desktop
// @media (max-width: $mediumDeviceMaxWidth) { HEAD { font-family: "medium"; } }    // Eg: Tablet
// @media (max-width: $smallDeviceMaxWidth ) { HEAD { font-family: "small";  } }    // Eg: Phone


/* Define the names of all our breakpoints in the HEAD element: (In ascending order, beginning with the default/no-breakpoints name) */

// HEAD * { font-family: "defaultbreakpoint","small","medium","large","giant"; }
// or
HEAD * { font-family: "defaultbreakpoint","featurephone","phone","tablet","desktop","widescreen"; }


/* When media-queries not supported: */
HEAD { font-family: 'defaultbreakpoint'; }
// Eg: IE6-8 without respondjs will see .defaultbreakpoint class on HTML element.


/* Otherwise when media-queries are supported: */

// Either use generic names:
// @media (min-width: $desktopDeviceMaxWidth ) { HEAD { font-family: "giant";  } }    // Eg: Large desktop
// @media (max-width: $desktopDeviceMaxWidth ) { HEAD { font-family: "large";  } }    // Eg: Small desktop
// @media (max-width: $tabletDeviceMaxWidth)   { HEAD { font-family: "medium"; } }    // Eg: Tablet / Small laptop
// @media (max-width: $phoneDeviceMaxWidth )   { HEAD { font-family: "small";  } }    // Eg: Handheld

// Or, of you prefer to use more specific breakpoint names:
@media (min-width: $desktopDeviceMaxWidth )      { HEAD { font-family: "widescreen";  } }
@media (max-width: $desktopDeviceMaxWidth )      { HEAD { font-family: "desktop";  } }
@media (max-width: $tabletDeviceMaxWidth)        { HEAD { font-family: "tablet"; } }
@media (max-width: $phoneDeviceMaxWidth )        { HEAD { font-family: "phone";  } }
@media (max-width: $featurephoneDeviceMaxWidth ) { HEAD { font-family: "featurephone";  } }
