<<<<<<< HEAD
// Up to you:
$smallDeviceMaxWidth  : 40em;
$mediumDeviceMaxWidth : 60em;
$largeDeviceMaxWidth  : 90em;
=======

// // Up to you:
// $smallDeviceMaxWidth  : 40em;
// $mediumDeviceMaxWidth : 80em;
// $largeDeviceMaxWidth  : 100em;
// 
// // Rudimentary detection of display type using breakpoints defined in the CSS. Store the results in global object variable.
// // The advantage of this technique is simply that the breakpoints don't have to be defined and duplicated in the JS too.
// // Eg: window.breakpoints.phone === true
// // IMPORTANT: Must be used with breakpoints.scss.
// //            Use with respond.js to use this Media Query technique in IE6-8 etc.
// // By George Adamson - https://github.com/georgeadamson/breakpoints-js
// 
// /* Define the names of all our breakpoints: */
// // (Not required but useful to produce a hash of possible breakpoints and their current state by iterating through this list)
// HEAD * { font-family: "defaultbreakpoint","small","medium","large","giant"; }
// 
// // Detect "current" display name using mediaqueries: (Javascript can read this to find out currently applicable display)
// 
// /* When media-queries not supported: */
// // Eg: IE6-8 without respondjs will see .no-breakpoints class on HTML element.
// HEAD { font-family: 'defaultbreakpoint'; }
// 
// /* Otherwise when media-queries are supported: */ 
// @media (min-width: $largeDeviceMaxWidth ) { HEAD { font-family: "giant";  } }    // Eg: Large desktop
// @media (max-width: $largeDeviceMaxWidth ) { HEAD { font-family: "large";  } }    // Eg: Small desktop
// @media (max-width: $mediumDeviceMaxWidth) { HEAD { font-family: "medium"; } }    // Eg: Tablet
// @media (max-width: $smallDeviceMaxWidth ) { HEAD { font-family: "small";  } }    // Eg: Phone
>>>>>>> Added support for breakpoint range classnames e.g. gt-tablet


/* Define the names of all our breakpoints in the HEAD element: (In ascending order) */

// HEAD * { font-family: "defaultbreakpoint","small","medium","large","giant"; }
// or
HEAD * { font-family: "defaultbreakpoint","featurephone","phone","tablet","desktop","widescreen"; }



/* When media-queries not supported: */
HEAD { font-family: 'defaultbreakpoint'; }

<<<<<<< HEAD
/* Otherwise when media-queries are supported: */ 
@media (min-width: $largeDeviceMaxWidth ) { HEAD { font-family: "giant";  } }    // Eg: Large desktop
@media (max-width: $largeDeviceMaxWidth ) { HEAD { font-family: "large";  } }    // Eg: Small desktop
@media (max-width: $mediumDeviceMaxWidth) { HEAD { font-family: "medium"; } }    // Eg: Tablet / Small laptop
@media (max-width: $smallDeviceMaxWidth ) { HEAD { font-family: "small";  } }    // Eg: Handheld

// Or, of you prefer to use more specific breakpoint names:
// HEAD * { font-family: "defaultbreakpoint","phone","tablet","desktop","widescreen"; }
// @media (min-width: $largeDeviceMaxWidth ) { HEAD { font-family: "widescreen";  } }
// @media (max-width: $largeDeviceMaxWidth ) { HEAD { font-family: "desktop";  } }
// @media (max-width: $mediumDeviceMaxWidth) { HEAD { font-family: "tablet"; } }
// @media (max-width: $smallDeviceMaxWidth ) { HEAD { font-family: "phone";  } }
=======
/* Otherwise when media-queries are supported: */

// @media (min-width: 100em) { HEAD { font-family: "giant";  } }
// @media (max-width: 100em) { HEAD { font-family: "large";  } }
// @media (max-width: 80em)  { HEAD { font-family: "medium"; } }
// @media (max-width: 40em)  { HEAD { font-family: "small";  } }

@media (min-width: 100em) { HEAD { font-family: "widescreen";   } }
@media (max-width: 100em) { HEAD { font-family: "desktop";      } }
@media (max-width: 80em)  { HEAD { font-family: "tablet";       } }
@media (max-width: 40em)  { HEAD { font-family: "phone";        } }
@media (max-width: 25em)  { HEAD { font-family: "featurephone"; } }
>>>>>>> Added support for breakpoint range classnames e.g. gt-tablet
